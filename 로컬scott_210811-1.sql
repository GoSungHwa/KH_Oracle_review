--DDL
    --CREATE
CREATE TABLE dept01(
    deptno NUMBER(2) PRIMARY KEY,
    dname VARCHAR(60) NOT NULL,
    loc VARCHAR(90) NOT NULL
);

INSERT INTO DEPT01 VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT01 VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT01 VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT01 VALUES (40,'OPERATIONS','BOSTON');
COMMIT;
SELECT *FROM dept01;

--제약조건 작성 방법
   --방법1 인라인 방식
CREATE TABLE emp01(
    empno NUMBER PRIMARY KEY,
    ename VARCHAR2(20) NOT NULL,
    job VARCHAR(9) UNIQUE,
    deptno NUMBER(2) REFERENCES dept01(deptno)
);
   --방법2  아웃라인 방식
CREATE TABLE emp02(
    empno NUMBER,
    ename VARCHAR2(20) NOT NULL,
    job VARCHAR(9),
    deptno NUMBER(2),
    PRIMARY KEY (empno),
    UNIQUE (job),
    FOREIGN KEY(deptno) REFERENCES dept01(deptno)
);

   --방법 3 인라인+CONSTRAINTS NAME 작성
CREATE TABLE emp03(
    empno NUMBER CONSTRAINTS EMP03_EMPNO_PK PRIMARY KEY,
    ename VARCHAR2(20) CONSTRAINTS EMP03_ENAME_NN NOT NULL,
    job VARCHAR(9) CONSTRAINTS EMP03_JOB_UQ UNIQUE,
    deptno NUMBER(2) CONSTRAINTS EMP03_DEPTNO_FK REFERENCES dept01(deptno)
);
    --방법 4 아웃라인 +CONSTRAINTS NAME 작성
CREATE TABLE emp04 (
    empno NUMBER
    , ename VARCHAR2(20) NOT NULL
    , job VARCHAR2(9)
    , deptno NUMBER(2)
    --- 아웃라인 : NOT NULL 안됨.
    --- 제약조건종류 (적용할컬럼명)
    , CONSTRAINTS EMP04_EMPNO_PK    PRIMARY KEY (empno)
    , CONSTRAINTS EMP04_JOB_UK      UNIQUE (job)
    , CONSTRAINTS EMP04_DEPTNO_FK   FOREIGN KEY (deptno) REFERENCES DEPT01(DEPTNO)
);
    --방법 5 인라인 +CONSTRAINTS NAME 작성 +CHECK
CREATE TABLE emp05(
    empno NUMBER  CONSTRAINTS EMP05_EMPNO_PK    PRIMARY KEY
    , ename VARCHAR2(20)  CONSTRAINTS EMP05_ENAME_NN     NOT NULL
    , job VARCHAR2(9) CONSTRAINTS EMP05_JOB_UK   UNIQUE
    , deptno NUMBER(2)  CONSTRAINTS EMP05_DEPTNO_FK    REFERENCES DEPT01(DEPTNO)
    , gender NUMBER CONSTRAINTS EMP05_GENDER_CK     CHECK (gender IN (0,1))
);
--방법 6 아웃라인 +CONSTRAINTS NAME 작성 +CHECK
CREATE TABLE emp06 (
    empno NUMBER
    , ename VARCHAR2(20) NOT NULL
    , job VARCHAR2(9)
    , deptno NUMBER(2)
    , gender NUMBER 
    --- 아웃라인 : NOT NULL 안됨.
    --- 제약조건종류 (적용할컬럼명)
    , CONSTRAINTS EMP06_EMPNO_PK    PRIMARY KEY (empno)
    , CONSTRAINTS EMP06_JOB_UK      UNIQUE (job)
    , CONSTRAINTS EMP06_DEPTNO_FK   FOREIGN KEY (deptno) REFERENCES DEPT01(DEPTNO)
    , CONSTRAINTS EMP06_GENDER_CK   CHECK (gender IN (0,1))
);

--REFFERNCE 뒤에 ON DELETE [CASCADE/SET NULL] 


SELECT *FROM USER_CONSTRAINTS;

--제약사항 확인 : 제약사항 정보를 확인 할 수 있는 테이블  --그냥 해봄
SELECT SUBSTR(A.COLUMN_NAME,1,15) COLUMN_NAME,
DECODE(B.CONSTRAINT_TYPE,
    'P','PRIMARY KEY',
    'U','UNIQUE KEY',
    'C','CHECK OR NOT NULL',
    'R','FOREIGN KEY' ) CONSTRAINT_TYPE,  --별칭
    A.CONSTRAINT_NAME
FROM USER_CONS_COLUMNS A, USER_CONSTRAINTS B
WHERE A.TABLE_NAME=UPPER('&table_name')   --'& ' : table_name이라는 입력창이 뜬다
    AND A.TABLE_NAME=B.TABLE_NAME
    AND A.CONSTRAINT_NAME=B.CONSTRAINT_NAME
ORDER BY 1;   --1 : 컬럼 순서(첫번째)부터 ??

--ALTER 
--ADD(추가),RENAME(이름변경),MODIFY(수정),DROP(삭제)
--ALTER TALBLE dept ADD 추가컬럼명 자료형 제약조건
--ALTER TABLE dept MODIFY COLUMN기존컬럼명 번경자료형 변경제약조건
--ALTER TABLE dept DROP COLUMN 기존컬럼명
--ALTER TABLE dept RENAME 기존컬럼명 
CREATE TABLE test02(
t1 VARCHAR2(22)
);
ALTER TABLE test02 ADD(t4 NUMBER);

ALTER TABLE dept01 ADD(T4 NUMBER);
SELECT *FROM dept01;

ALTER TABLE dept01 RENAME COLUMN T4 TO T1;
SELECT *FROM dept01;

ALTER TABLE dept01 MODIFY (T1 VARCHAR2(30));
DESC dept01;

ALTER TABLE dept01 DROP COLUMN T1;
SELECT * FROM dept01;